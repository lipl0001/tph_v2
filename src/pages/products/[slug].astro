---
import "../../styles/global.css";
import "../../styles/style.css";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Collage from "../../components/Collage.astro";
import Footer from "../../components/Footer.astro";
import Get_inspired from "../../components/Get_inspired.astro";
import Tenoff from "../../components/Tenoff.astro";

//med hjælp fra chatgpt
interface ProductItem {
  id: number;
  name: string;
  price: number;
  slug: string;
  brodkrumme: string;
  front: string;
  bigfront: string;
  back: string;
  soldout: boolean;
  sale: boolean;
  discountprice: number;
  discription: string;
  model: string;
  materials: string;
  fit1: string;
  fit2: string;
  care1: string;
  care2: string;
  care3: string;
  care4: string;
  care5: string;
  sizechart: string;
}

// Fetching data and ensuring it matches the ProductItem type
export async function getStaticPaths() {
  const response = await fetch("https://kcyafdrxhdqxjputqjxa.supabase.co/rest/v1/product_items_duplicate", {
    method: "GET",
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtjeWFmZHJ4aGRxeGpwdXRxanhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTY1NDgyNjgsImV4cCI6MjAzMjEyNDI2OH0.Ds4oUM3yPKNH5mMMKKLDh3QmQ1iTPuS-sqllkSvXaY4",
    },
  });
  const data: ProductItem[] = await response.json();

  const newData = data.map((product: ProductItem) => {
    return { params: { slug: product.slug }, props: { data: product } };
  });

  //console.log(newData);
  return newData;
}

const { data } = Astro.props;
console.log(data);
---

<Layout title="PanicHood">
  <Header />
  <Tenoff />
  <main class="product-page">
    <p><a href="/">Home</a> / <a href="/products">Products</a> / <a href="">{data.brodkrumme}</a></p>
    <div class="grid1_1">
      <h1 class="h1_mobil">{data.name}</h1>
      <div class="img_container">
        <img src={data.front} alt="tee1_front" class="tee1_front active" />
        <img src={data.bigfront} alt="tee1_front" class="tee2_front" />
        <img src={data.back} alt="tee1_front" class="tee3_front" />

        <div>
          {
            data.soldout && (
              <>
                <div class="box">Sold out</div>
              </>
            )
          }
          {
            data.sale && (
              <>
                <div class="box2">On sale</div>
              </>
            )
          }
        </div>
      </div>
      <button id="next-btn" class="next-btn"> <img src="../../ikoner/pil.png" alt="pil" /> </button>
      <div class="text">
        <div class="panic_dealer_tee">
          <h1 class="h1">{data.name}</h1>
        </div>
        <!-- Med hjælp fra chatgpt -->
        <div class="pris">
          <h2 class={`original_pris ${data.sale ? "sale" : ""}`}>{data.price}</h2>
          {data.sale && <h2 class="discountedprice">{data.discountprice} DKK</h2>}
        </div>
        <p>Tax included. Shipping calculated at checkout.</p>
        <p class="beskrivelse">
          {data.discription}
        </p>
        <p>{data.model}</p>
        <h3 class="name_size" {...data.name === "TOTE BAG" && { id: "gem" }}>SIZE</h3>
        <div class="container">
          <div class="size-selector" {...data.name === "TOTE BAG" && { id: "gem" }}>
            <div class="sizes">
              <button class="size" data-size="S">S</button>
              <button class="size" data-size="M">M</button>
              <button class="size" data-size="L">L</button>
              <button class="size" data-size="XL">XL</button>
            </div>
          </div>
          <div class="add_to_card_and_quantity_selector">
            <div class="quantity-selector">
              <button id="decrease">-</button>
              <span id="quantity">1</span>
              <button id="increase">+</button>
            </div>

            {data.soldout ? <button id="soldout">SOLD OUT</button> : <button id="add-to-cart">ADD TO CART</button>}
          </div>
          <div class="all_acordion">
            <button class="accordion">MATERIALS</button>
            <div class="panel">
              <p>{data.materials}</p>
            </div>

            <button class="accordion" {...data.name === "TOTE BAG" && { id: "gem" }}>FIT</button>
            <div class="panel" {...data.name === "TOTE BAG" && { id: "gem" }}>
              <p>{data.fit1}</p>
              <p>{data.fit2}</p>
            </div>

            <button class="accordion">CARE INSTRUCTIONS</button>
            <div class="panel">
              <p>{data.care1}</p>
              <p>{data.care2}</p>
              <p>{data.care3}</p>
              <p>{data.care4}</p>
              <p>{data.care5}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <img src={data.sizechart} alt="sizechart" class="sizechart" />
    <Get_inspired data={data} />
  </main>

  <Footer />

  <style>
    .h1_mobil {
      display: none;
    }
    main {
      padding: 3% 8% 0% 8%;
    }
    a {
      text-decoration: none;
      color: var(--oliveGrey);
    }

    img {
      width: 80%;
      background-color: transparent;
    }
    .img_container {
      position: relative;
    }

    .img_container img {
      display: none;
    }
    .img_container img.active {
      display: block;
    }

    .next-btn {
      cursor: pointer;
      position: absolute;
      z-index: 1;
      border: 0px;
      justify-content: center;
      background-color: transparent;
      margin-top: 18%;
      width: 5%;
      left: 41%;
    }

    .img_container .box,
    .img_container .box2 {
      position: absolute;
      top: 0%;
      right: 20%;
      background-color: var(--notThatBlack);
      color: var(--delicateWhite);
      padding: 10px;
      font-family: var(--primary);
    }

    .img_container .box2 {
      background-color: var(--accentColor);
      padding-left: 9%;
      padding-right: 9%;
    }

    h1 {
      margin: 0%;
    }

    .pris {
      padding-top: 1%;
      display: flex;
    }

    .discountedprice {
      color: var(--accentColor);
    }

    .sale {
      display: inline-block; /* eller block afhængigt af dine behov */
      width: 65px;
      height: 38px;
      background-image: url(../../illustrationer/tekst_krussedulle.svg);
      background-size: contain;
      background-repeat: no-repeat;
    }

    .grid1_1 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      margin-top: 5%;
    }

    .product-page {
      margin-left: 6%;
      margin-right: 4%;
    }

    .text {
      max-width: 100%;
    }
    .beskrivelse {
      margin-top: 5%;
    }

    .beskrivelse + p {
      margin-top: 5%;
    }

    #gem {
      display: none;
    }

    h3 {
      margin-top: 5%;
    }
    .sizechart {
      margin-top: 10%;
      width: 102%;
      border: 1px solid var(--notThatBlack);
    }
    .pris {
      margin-top: 10%;
    }
    .container {
      display: flex;
      flex-direction: column;
      gap: 10px;
      width: 90%;
      margin-top: 5%;
    }

    .add_to_card_and_quantity_selector {
      display: flex;
      gap: 5%;
    }

    .size-selector label {
      font-weight: bold;
    }

    .sizes {
      display: flex;
      gap: 5%;
    }

    .size {
      width: 100%;
      height: 50px;
      border: 1px solid var(--notThatBlack);
      background-color: var(--delicateWhite);
      cursor: pointer;
      font-size: 1.5rem;
      font-weight: bold;
      font-family: var(--primary);
    }

    .size.selected {
      background-color: var(--accentColor);
      color: var(--delicateWhite);
    }

    .quantity-selector {
      display: flex;
      align-items: center;
      gap: 10px;
      border: 1px solid var(--notThatBlack);
      background-color: var(--delicateWhite);
      cursor: pointer;
      font-size: 1.5rem;
      font-family: var(--primary);
      padding-left: 1%;
      padding-right: 1.5%;
    }

    .quantity-selector button {
      border: 0px;
      font-size: 2rem;
      height: 40px;
      width: 30px;
      background-color: transparent;
    }

    #add-to-cart {
      padding: 13px 10px;
      background-color: var(--accentColor);
      color: var(--delicateWhite);
      border: none;
      cursor: pointer;
      font-size: 1.5rem;
      width: 100%;
      font-family: var(--primary);
    }

    #soldout {
      padding: 13px 10px;
      background-color: var(--notThatBlack);
      color: var(--delicateWhite);
      border: none;
      cursor: pointer;
      font-size: 1.5rem;
      font-weight: bold;
      width: 100%;
      font-family: var(--primary);
    }

    .accordion {
      background-color: var(--delicateWhite);
      color: var(--notThatBlack);
      cursor: pointer;
      padding-top: 2%;
      border: none;
      text-align: left;
      outline: none;
      font-size: 1.2rem;
      transition: 0.4s;
      width: 90%;
      font-weight: bold;
      font-family: var(--secondary);
    }

    .all_acordion {
      margin-top: 5%;
    }

    .accordion:after {
      content: "\003C";
      font-weight: bold;
      float: right;
      margin-left: 5px;
      transform: rotate(270deg);
      display: inline-block;
    }

    .active:after {
      content: "\003C";
      transform: rotate(90deg);
      display: inline-block;
    }

    .panel {
      background-color: var(--delicateWhite);
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.2s ease-out;
    }

    .panel p {
      width: 90%;
      padding-left: 0%;
      padding-top: 1%;
      padding-bottom: 1%;
    }

    @media (max-width: 1000px) {
      h1 {
        font-size: 2.4rem;
      }

      h2 {
        font-size: 1.5rem;
      }

      h3 {
        font-size: 1.5rem;
      }

      .size {
        font-size: 1rem;
      }

      #add-to-cart {
        font-size: 1rem;
      }

      .quantity-selector {
        font-size: 1rem;
      }

      .quantity-selector button {
        font-size: 1.5rem;
      }

      .accordion {
        font-size: 1rem;
      }

      .sale {
        width: 50px;
        height: 30px;
      }
    }

    @media (max-width: 800px) {
      main {
        padding: 2rem; /* Mindre padding for mindre skærme */
      }
      img {
        width: 100%; /* Fyld hele bredden på mindre skærme */
      }

      .next-btn {
        cursor: pointer;
        position: absolute;
        z-index: 1;
        border: 0px;
        justify-content: center;
        background-color: transparent;
        margin-top: 60%;
        width: 10%;
        left: 85%;
      }

      .product-page .grid1_1 {
        display: flex;
        flex-direction: column;
      }

      .product-page .grid1_1 .panic_dealer_tee {
        order: -1;
      }

      .product-page .grid1_1 .img_container {
        order: 1;
        margin-bottom: 2rem;
        width: 100%;
      }

      .product-page .grid1_1 .text {
        order: 2;
        width: 100%;
      }

      .sizechart {
        width: 100%;
      }

      .h1 {
        display: none;
      }

      .h1_mobil {
        display: block;
      }

      .container {
        width: 100%;
      }

      .accordion {
        width: 100%;
      }

      .img_container .box,
      .img_container .box2 {
        position: absolute;
        top: 0%;
        right: 0%;
      }
    }
  </style>

  <!-- Med hjælp fra chatgpt -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Accordion functionality
      var acc = document.getElementsByClassName("accordion") as HTMLCollectionOf<HTMLElement>;
      var i: number;

      for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function (this: HTMLElement) {
          this.classList.toggle("active");
          var panel = this.nextElementSibling as HTMLElement;
          if (panel.style.maxHeight) {
            panel.style.maxHeight = "";
          } else {
            panel.style.maxHeight = panel.scrollHeight + "px";
          }
        });
      }
    });

    // Size selection functionality
    let selectedSize = null;
    const sizes = document.querySelectorAll(".size");
    sizes.forEach((size) => {
      size.addEventListener("click", function () {
        sizes.forEach((s) => s.classList.remove("selected"));
        size.classList.add("selected");
        selectedSize = size.getAttribute("data-size");
      });
    });

    // Quantity functionality
    let quantity = 1;
    const quantityElement = document.getElementById("quantity");

    if (quantityElement) {
      document.getElementById("decrease")?.addEventListener("click", function () {
        if (quantity > 1) {
          quantity--;
          quantityElement.textContent = quantity.toString(); // Convert number to string
        }
      });

      document.getElementById("increase")?.addEventListener("click", function () {
        quantity++;
        quantityElement.textContent = quantity.toString(); // Convert number to string
      });
    }

    // Image slider functionality
    const images = document.querySelectorAll(".img_container img");
    const nextBtn = document.getElementById("next-btn");
    let currentIndex = 0;

    if (nextBtn) {
      nextBtn.addEventListener("click", function () {
        images[currentIndex].classList.remove("active");
        currentIndex = (currentIndex + 1) % images.length;
        images[currentIndex].classList.add("active");
      });
    }
  </script>
</Layout>
